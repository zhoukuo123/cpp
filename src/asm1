
test.o：     文件格式 elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
   f:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  13:	75 13                	jne    28 <main+0x28>
  15:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1c <main+0x1c>
  1c:	b8 00 00 00 00       	mov    $0x0,%eax
  21:	e8 00 00 00 00       	callq  26 <main+0x26>
  26:	eb 49                	jmp    71 <main+0x71>
  28:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  2c:	75 13                	jne    41 <main+0x41>
  2e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 35 <main+0x35>
  35:	b8 00 00 00 00       	mov    $0x0,%eax
  3a:	e8 00 00 00 00       	callq  3f <main+0x3f>
  3f:	eb 30                	jmp    71 <main+0x71>
  41:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
  45:	75 13                	jne    5a <main+0x5a>
  47:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 4e <main+0x4e>
  4e:	b8 00 00 00 00       	mov    $0x0,%eax
  53:	e8 00 00 00 00       	callq  58 <main+0x58>
  58:	eb 17                	jmp    71 <main+0x71>
  5a:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
  5e:	75 11                	jne    71 <main+0x71>
  60:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 67 <main+0x67>
  67:	b8 00 00 00 00       	mov    $0x0,%eax
  6c:	e8 00 00 00 00       	callq  71 <main+0x71>
  71:	b8 00 00 00 00       	mov    $0x0,%eax
  76:	c9                   	leaveq 
  77:	c3                   	retq   

0000000000000078 <_Z41__static_initialization_and_destruction_0ii>:
  78:	55                   	push   %rbp
  79:	48 89 e5             	mov    %rsp,%rbp
  7c:	48 83 ec 10          	sub    $0x10,%rsp
  80:	89 7d fc             	mov    %edi,-0x4(%rbp)
  83:	89 75 f8             	mov    %esi,-0x8(%rbp)
  86:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  8a:	75 32                	jne    be <_Z41__static_initialization_and_destruction_0ii+0x46>
  8c:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  93:	75 29                	jne    be <_Z41__static_initialization_and_destruction_0ii+0x46>
  95:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 9c <_Z41__static_initialization_and_destruction_0ii+0x24>
  9c:	e8 00 00 00 00       	callq  a1 <_Z41__static_initialization_and_destruction_0ii+0x29>
  a1:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a8 <_Z41__static_initialization_and_destruction_0ii+0x30>
  a8:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # af <_Z41__static_initialization_and_destruction_0ii+0x37>
  af:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b6 <_Z41__static_initialization_and_destruction_0ii+0x3e>
  b6:	48 89 c7             	mov    %rax,%rdi
  b9:	e8 00 00 00 00       	callq  be <_Z41__static_initialization_and_destruction_0ii+0x46>
  be:	90                   	nop
  bf:	c9                   	leaveq 
  c0:	c3                   	retq   

00000000000000c1 <_GLOBAL__sub_I_main>:
  c1:	55                   	push   %rbp
  c2:	48 89 e5             	mov    %rsp,%rbp
  c5:	be ff ff 00 00       	mov    $0xffff,%esi
  ca:	bf 01 00 00 00       	mov    $0x1,%edi
  cf:	e8 a4 ff ff ff       	callq  78 <_Z41__static_initialization_and_destruction_0ii>
  d4:	5d                   	pop    %rbp
  d5:	c3                   	retq   
